/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package MODELO;


import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.Statement;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.time.format.DateTimeFormatter;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Master
 */
public class Factura extends javax.swing.JFrame {
    Conexion cn = new Conexion();
    Connection con;
    DefaultTableModel model;
    Statement st;
    ResultSet rs;
    int id;


    /**
     * Creates new form Factura
     */
    public Factura() {
        initComponents();
        this.setLocationRelativeTo(null);
        listado();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        TablaFact = new javax.swing.JTable();
        txtFactura = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtid = new javax.swing.JTextField();
        txtcliente = new javax.swing.JTextField();
        txtFecha = new javax.swing.JTextField();
        btnGuardar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        btnModificar = new javax.swing.JButton();
        btnLimpiar = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        Checkpagado = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        TablaFact.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "id", "Cliente", "Fecha", "Pagado"
            }
        ));
        TablaFact.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TablaFactMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(TablaFact);

        txtFactura.setBorder(javax.swing.BorderFactory.createTitledBorder("Factura"));
        txtFactura.setToolTipText("");
        txtFactura.setName(""); // NOI18N

        jLabel1.setText("id");

        jLabel2.setText("Cliente");

        jLabel3.setText("Fecha");

        jLabel4.setText("Pagado");

        txtid.setEditable(false);
        txtid.setEnabled(false);

        btnGuardar.setText("guardar");
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        btnEliminar.setText("eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        btnModificar.setText("modificar");
        btnModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarActionPerformed(evt);
            }
        });

        btnLimpiar.setText("limpiar");
        btnLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarActionPerformed(evt);
            }
        });

        jButton1.setText("Siguiente");

        Checkpagado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CheckpagadoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout txtFacturaLayout = new javax.swing.GroupLayout(txtFactura);
        txtFactura.setLayout(txtFacturaLayout);
        txtFacturaLayout.setHorizontalGroup(
            txtFacturaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(txtFacturaLayout.createSequentialGroup()
                .addGroup(txtFacturaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(txtFacturaLayout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addGroup(txtFacturaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(txtFacturaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(txtFacturaLayout.createSequentialGroup()
                                    .addComponent(jLabel2)
                                    .addGap(18, 18, 18)
                                    .addComponent(txtcliente))
                                .addGroup(txtFacturaLayout.createSequentialGroup()
                                    .addComponent(jLabel1)
                                    .addGap(18, 18, 18)
                                    .addComponent(txtid, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(txtFacturaLayout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(25, 25, 25)
                                .addComponent(txtFecha, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(txtFacturaLayout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(18, 18, 18)
                                .addComponent(Checkpagado, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(txtFacturaLayout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addGroup(txtFacturaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnEliminar)
                            .addComponent(btnGuardar))
                        .addGap(23, 23, 23)
                        .addGroup(txtFacturaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnModificar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnLimpiar, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(64, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, txtFacturaLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addGap(19, 19, 19))
        );
        txtFacturaLayout.setVerticalGroup(
            txtFacturaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(txtFacturaLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(txtFacturaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addGroup(txtFacturaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtcliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(36, 36, 36)
                .addGroup(txtFacturaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtFecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(44, 44, 44)
                .addGroup(txtFacturaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Checkpagado)
                    .addGroup(txtFacturaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel4)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 46, Short.MAX_VALUE)
                .addGroup(txtFacturaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnGuardar)
                    .addComponent(btnModificar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(txtFacturaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnEliminar)
                    .addComponent(btnLimpiar))
                .addGap(18, 18, 18)
                .addComponent(jButton1)
                .addGap(20, 20, 20))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtFactura, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 554, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(txtFactura, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        txtFactura.getAccessibleContext().setAccessibleName("");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        try {
            Agregar();
        } catch (ParseException ex) {
            System.out.println(ex);
        }
        listado();
        nuevo();
    }//GEN-LAST:event_btnGuardarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        Eliminar();
        listado();
        nuevo();
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarActionPerformed
        try {
            Modificar();
        } catch (ParseException ex) {
            System.out.println(ex);
        }
        listado();
        nuevo();
    }//GEN-LAST:event_btnModificarActionPerformed

    private void btnLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarActionPerformed
        nuevo();
    }//GEN-LAST:event_btnLimpiarActionPerformed

    private void TablaFactMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TablaFactMouseClicked
   int row = TablaFact.getSelectedRow();
        if (row == -1) {
            JOptionPane.showMessageDialog(null, "No se Selecciono");
        } else {
            id = Integer.parseInt((String) TablaFact.getValueAt(row, 0).toString());
            String cli = (String) TablaFact.getValueAt(row, 1);
            String Fecha = ((String) TablaFact.getValueAt(row, 2).toString());
            int Pagado = Integer.parseInt((String) TablaFact.getValueAt(row, 3).toString());
            txtid.setText("" + id);
            txtcliente.setText(cli);
            txtFecha.setText("" + Fecha);
            Checkpagado.setText("" + Pagado);

        }        
    }//GEN-LAST:event_TablaFactMouseClicked

    private void CheckpagadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CheckpagadoActionPerformed
        // TODO add your handling code here:
       
    }//GEN-LAST:event_CheckpagadoActionPerformed

    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Factura.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Factura.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Factura.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Factura.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Factura().setVisible(true);
            }
        });
    }

    
    void listado() {
        String sql = "select * from factura";
        try {
            con = cn.getConnection();
            st = con.createStatement();
            rs = st.executeQuery(sql);
            Object[] factura = new Object[4];
//            String[] Titulos={"ID","DNI","NOMBRES"};         
//            model=new DefaultTableModel(null,Titulos);   
            model = (DefaultTableModel) TablaFact.getModel();
            while (rs.next()) {
                factura[0] = rs.getInt("id");
                factura[1] = rs.getString("cliente_id_fk");
                factura[2] = rs.getDate("fecha");
                factura[3] = rs.getInt("pagado");

                model.addRow(factura);
            }
            TablaFact.setModel(model);

        } catch (Exception e) {
        }

    }

    void Agregar() throws ParseException {
        String cli = txtcliente.getText();
        String fecha = txtFecha.getText();
       
        SimpleDateFormat formatter = new SimpleDateFormat("dd-MM-yyyy"); // your template here
        java.util.Date dateStr = formatter.parse(fecha);
        java.sql.Date dateDB = new java.sql.Date(dateStr.getTime());
       //DateTime dateTime = DateTime.parse(dateInString, formatter);
        //DateTimeFormatter formatter = DateTimeFormat.forPattern("dd/MM/yyyy");
        //int pago = Integer.parseInt(Checkpagado.getText());
        boolean pagado = Checkpagado.isSelected();
        int espagado;
        if (pagado){
            espagado = 1;
        }else{
            espagado = 0;
        }
        System.out.println(pagado);
        
        try {
            if (cli.equals("")) {
                JOptionPane.showMessageDialog(null, "Debe Ingresar Datos");
                limpiarTabla(model);
            } else {
                String sql = "insert into factura(cliente_id_fk, fecha, pagado) values('" + cli + "','" + dateDB + "',b'" + espagado + "')";
                System.out.println(sql);
                con = cn.getConnection();
                st = con.createStatement();
                st.executeUpdate(sql);
                JOptionPane.showMessageDialog(null, "Factura agregado");
                limpiarTabla(model);

            }

        } catch (Exception e) {
            System.out.println(e);
        }

    }

    void Modificar() throws ParseException {
        String cli = txtcliente.getText();
        String fecha = txtFecha.getText();
        int pago = Integer.parseInt(Checkpagado.getText());
         SimpleDateFormat formatter = new SimpleDateFormat("dd-MM-yyyy"); // your template here
        java.util.Date dateStr = formatter.parse(fecha);
        java.sql.Date dateDB = new java.sql.Date(dateStr.getTime());
        boolean pagado = Checkpagado.isSelected();
        int espagado;
        if (pagado){
            espagado = 1;
        }else{
            espagado = 0;
        }
        System.out.println(pagado);
        String sql = "update factura set cliente_id_fk='" + cli + "', fecha='" + fecha + "',precio='" + pago+ "' where Id=" + id;
        try {
            if (cli != null) {
                con = cn.getConnection();
                st = con.createStatement();
                st.executeUpdate(sql);
                JOptionPane.showMessageDialog(null, "Factura Modificada");
                limpiarTabla(model);

            } else {
                JOptionPane.showMessageDialog(null, "Error...!!!");
            }

        } catch (Exception e) {
        }

    }

    void limpiarTabla(DefaultTableModel model) {
        for (int i = 0; i <= TablaFact.getRowCount(); i++) {
            model.removeRow(i);
            i = i - 1;
        }

    }

    void Eliminar() {
        String sql = "delete from factura where Id=" + id;
        int fila = TablaFact.getSelectedRow();
        if (fila < 0) {
            JOptionPane.showMessageDialog(null, "Factura no Seleccionada");
        } else {
            try {
                con = cn.getConnection();
                st = con.createStatement();
                st.executeUpdate(sql);
                JOptionPane.showMessageDialog(null, "Factura Eliminada");
                limpiarTabla(model);

            } catch (Exception e) {
            }

        }

    }

    void nuevo() {
        txtid.setText("");
        txtcliente.setText("");
        txtFecha.setText("");
        Checkpagado.setText("");
        txtcliente.requestFocus();
    }

    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox Checkpagado;
    private javax.swing.JTable TablaFact;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnLimpiar;
    private javax.swing.JButton btnModificar;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel txtFactura;
    private javax.swing.JTextField txtFecha;
    private javax.swing.JTextField txtcliente;
    private javax.swing.JTextField txtid;
    // End of variables declaration//GEN-END:variables

}
